{"version":3,"file":"js-data-ignite.js","sources":["../src/index.js"],"sourcesContent":["import knex from 'knex'\nimport { utils } from 'js-data'\nimport {\n  Adapter,\n  reserved\n} from 'js-data-adapter'\nimport toString from 'lodash.tostring'\nimport snakeCase from 'lodash.snakecase'\n\nconst IgniteClient = require('nodejs-thin-client')\nconst SqlFieldsQuery = IgniteClient.SqlFieldsQuery\n\nconst DEFAULTS = {}\n\nconst equal = function (query, field, value, isOr) {\n  if (value === null) {\n    return query[isOr ? 'orWhereNull' : 'whereNull'](field)\n  }\n  return query[getWhereType(isOr)](field, value)\n}\n\nconst notEqual = function (query, field, value, isOr) {\n  if (value === null) {\n    return query[isOr ? 'orWhereNotNull' : 'whereNotNull'](field)\n  }\n  return query[getWhereType(isOr)](field, '!=', value)\n}\n\nconst getWhereType = function (isOr) {\n  return isOr ? 'orWhere' : 'where'\n}\n\nconst MILES_REGEXP = /(\\d+(\\.\\d+)?)\\s*(m|M)iles$/\nconst KILOMETERS_REGEXP = /(\\d+(\\.\\d+)?)\\s*(k|K)$/\n\n/**\n * Default predicate functions for the filtering operators.\n *\n * @name module:js-data-sql.OPERATORS\n * @property {Function} == Equality operator.\n * @property {Function} != Inequality operator.\n * @property {Function} > \"Greater than\" operator.\n * @property {Function} >= \"Greater than or equal to\" operator.\n * @property {Function} < \"Less than\" operator.\n * @property {Function} <= \"Less than or equal to\" operator.\n * @property {Function} isectEmpty Operator to test that the intersection\n * between two arrays is empty. Not supported.\n * @property {Function} isectNotEmpty Operator to test that the intersection\n * between two arrays is NOT empty. Not supported.\n * @property {Function} in Operator to test whether a value is found in the\n * provided array.\n * @property {Function} notIn Operator to test whether a value is NOT found in\n * the provided array.\n * @property {Function} contains Operator to test whether an array contains the\n * provided value. Not supported.\n * @property {Function} notContains Operator to test whether an array does NOT\n * contain the provided value. Not supported.\n */\nexport const OPERATORS = {\n  '=': equal,\n  '==': equal,\n  '===': equal,\n  '!=': notEqual,\n  '!==': notEqual,\n  '>': function (query, field, value, isOr) {\n    return query[getWhereType(isOr)](field, '>', value)\n  },\n  '>=': function (query, field, value, isOr) {\n    return query[getWhereType(isOr)](field, '>=', value)\n  },\n  '<': function (query, field, value, isOr) {\n    return query[getWhereType(isOr)](field, '<', value)\n  },\n  '<=': function (query, field, value, isOr) {\n    return query[getWhereType(isOr)](field, '<=', value)\n  },\n  'isectEmpty': function (query, field, value, isOr) {\n    throw new Error('isectEmpty not supported!')\n  },\n  'isectNotEmpty': function (query, field, value, isOr) {\n    throw new Error('isectNotEmpty not supported!')\n  },\n  'in': function (query, field, value, isOr) {\n    return query[getWhereType(isOr)](field, 'in', value)\n  },\n  'notIn': function (query, field, value, isOr) {\n    return query[isOr ? 'orNotIn' : 'notIn'](field, value)\n  },\n  'contains': function (query, field, value, isOr) {\n    throw new Error('contains not supported!')\n  },\n  'notContains': function (query, field, value, isOr) {\n    throw new Error('notContains not supported!')\n  },\n  'like': function (query, field, value, isOr) {\n    return query[getWhereType(isOr)](field, 'like', value)\n  },\n  'likei': function (query, field, value, isOr, knexInstance) {\n    return query[getWhereType(isOr)](knexInstance.raw(`LOWER(${field})`), 'like', knexInstance.raw(`LOWER('${value}')`))\n  },\n  'subquery': function (query, field, value, isOr, knexInstance) {\n    if (!value.field || !value.table || !value.filterField || !value.filterValue) {\n      throw new Error('Missing subquery fields')\n    }\n\n    return query[getWhereType(isOr)](field, 'in', knexInstance(value.table).where(value.filterField, value.filterValue).select(value.field))\n  },\n  'near': function (query, field, value, isOr) {\n    let radius\n    let unitsPerDegree\n    if (typeof value.radius === 'number' || MILES_REGEXP.test(value.radius)) {\n      radius = typeof value.radius === 'number' ? value.radius : value.radius.match(MILES_REGEXP)[1]\n      unitsPerDegree = 69.0 // miles per degree\n    } else if (KILOMETERS_REGEXP.test(value.radius)) {\n      radius = value.radius.match(KILOMETERS_REGEXP)[1]\n      unitsPerDegree = 111.045 // kilometers per degree;\n    } else {\n      throw new Error('Unknown radius distance units')\n    }\n\n    let [latitudeColumn, longitudeColumn] = field.split(',').map((c) => c.trim())\n    let [latitude, longitude] = value.center\n\n    // Uses indexes on `latitudeColumn` / `longitudeColumn` if available\n    query = query\n      .whereBetween(latitudeColumn, [\n        latitude - (radius / unitsPerDegree),\n        latitude + (radius / unitsPerDegree)\n      ])\n      .whereBetween(longitudeColumn, [\n        longitude - (radius / (unitsPerDegree * Math.cos(latitude * (Math.PI / 180)))),\n        longitude + (radius / (unitsPerDegree * Math.cos(latitude * (Math.PI / 180))))\n      ])\n\n    if (value.calculateDistance) {\n      let distanceColumn = (typeof value.calculateDistance === 'string') ? value.calculateDistance : 'distance'\n      query = query.select(knex.raw(`\n        ${unitsPerDegree} * DEGREES(ACOS(\n          COS(RADIANS(?)) * COS(RADIANS(${latitudeColumn})) *\n          COS(RADIANS(${longitudeColumn}) - RADIANS(?)) +\n          SIN(RADIANS(?)) * SIN(RADIANS(${latitudeColumn}))\n        )) AS ${distanceColumn}`, [latitude, longitude, latitude]))\n    }\n    return query\n  }\n}\n\nObject.freeze(OPERATORS)\n\n/**\n * IgniteAdapter class.\n *\n * @example\n * // Use Container instead of DataStore on the server\n * import { Container } from 'js-data';\n * import IgniteAdapter from 'js-data-sql';\n *\n * // Create a store to hold your Mappers\n * const store = new Container();\n *\n * // Create an instance of IgniteAdapter with default settings\n * const adapter = new IgniteAdapter();\n *\n * // Mappers in \"store\" will use the Sql adapter by default\n * store.registerAdapter('sql', adapter, { default: true });\n *\n * // Create a Mapper that maps to a \"user\" table\n * store.defineMapper('user');\n *\n * @class IgniteAdapter\n * @extends Adapter\n * @param {Object} [opts] Configuration options.\n * @param {boolean} [opts.debug=false] See {@link Adapter#debug}.\n * @param {Object} [opts.knexOpts] See {@link IgniteAdapter#knexOpts}.\n * @param {Object} [opts.operators] See {@link IgniteAdapter#operators}.\n * @param {boolean} [opts.raw=false] See {@link Adapter#raw}.\n */\nexport function IgniteAdapter (opts) {\n  utils.classCallCheck(this, IgniteAdapter)\n  opts || (opts = {})\n  opts.knexOpts || (opts.knexOpts = {})\n  opts.igniteClient || (opts.igniteClient = {})\n  utils.fillIn(opts, DEFAULTS)\n\n  Object.defineProperties(this, {\n    knex: {\n      writable: true,\n      value: undefined\n    },\n\n    igniteClient: {\n      writable: true,\n      value: undefined\n    }\n  })\n\n  Adapter.call(this, opts)\n\n  /**\n   * Override the default predicate functions for specified operators.\n   *\n   * @name IgniteAdapter#operators\n   * @type {Object}\n   * @default {}\n   */\n  this.knex || (this.knex = knex(this.knexOpts))\n\n  /**\n   * Override the default predicate functions for specified operators.\n   *\n   * @name IgniteAdapter#operators\n   * @type {Object}\n   * @default {}\n   */\n  this.operators || (this.operators = {})\n  utils.fillIn(this.operators, OPERATORS)\n\n  this.igniteClient || (this.igniteClient = opts.igniteClient)\n}\n\nfunction getTable (mapper) {\n  return mapper.table || snakeCase(mapper.name)\n}\n\nfunction getCacheName (mapper) {\n  return 'SQL_PUBLIC_' + getTable(mapper).toUpperCase()\n}\n\nfunction getFields (mapper, sqlBuilder) {\n  const fields = mapper.schema.properties\n  const table = getTable(mapper)\n\n  for (const field in fields) {\n    if (fields.hasOwnProperty(field)) {\n      sqlBuilder = sqlBuilder.select(`${table}.${field}`)\n    }\n  }\n\n  return sqlBuilder\n}\n\nfunction escapeData (mapper, props, knexInstance) {\n  for (const field in props) {\n    if (props.hasOwnProperty(field)) {\n      const types = Array.isArray(mapper.schema.properties[field].type) ? mapper.schema.properties[field].type.join('|') : mapper.schema.properties[field].type\n      switch (types) {\n        case 'array':\n          props[field] = knexInstance.raw(`'${JSON.stringify(props[field])}'`)\n          break\n        case 'date':\n        case 'date|null':\n          props[field] = props[field] ? knexInstance.raw(`TIMESTAMP '${props[field].toISOString()}'`) : null\n          break\n        case 'string':\n        case 'string|null':\n          props[field] = props[field] ? knexInstance.raw(`'${props[field].replace(/'/g, \"''\").replace(/\\?/g, '\\\\?')}'`) : null\n          break\n        case 'boolean':\n          props[field] = props[field] === false ? knexInstance.raw('FALSE') : props[field] === true ? knexInstance.raw('TRUE') : null\n      }\n    }\n  }\n\n  return props\n}\n\nfunction translateToKnex (mapper, values) {\n  if (!values || !values.length) {\n    return null\n  }\n\n  const fields = mapper.schema.properties\n\n  const result = {}\n  let i = 0\n\n  for (const field in fields) {\n    if (fields.hasOwnProperty(field)) {\n      switch (fields[field].type) {\n        case 'array':\n          result[field] = JSON.parse(values[i++].replace(/\\\\/g, ''))\n          break\n        default:\n          result[field] = values[i++]\n          break\n      }\n    }\n  }\n\n  return result\n}\n\n/**\n * Alternative to ES2015 class syntax for extending `IgniteAdapter`.\n *\n * @example <caption>Using the ES2015 class syntax.</caption>\n * class MyIgniteAdapter extends IgniteAdapter {...};\n * const adapter = new MyIgniteAdapter();\n *\n * @example <caption>Using {@link IgniteAdapter.extend}.</caption>\n * const instanceProps = {...};\n * const classProps = {...};\n *\n * const MyIgniteAdapter = IgniteAdapter.extend(instanceProps, classProps);\n * const adapter = new MyIgniteAdapter();\n *\n * @method IgniteAdapter.extend\n * @static\n * @param {Object} [instanceProps] Properties that will be added to the\n * prototype of the subclass.\n * @param {Object} [classProps] Properties that will be added as static\n * properties to the subclass itself.\n * @return {Constructor} Subclass of `IgniteAdapter`.\n */\nIgniteAdapter.extend = utils.extend\n\nAdapter.extend({\n  constructor: IgniteAdapter,\n\n  async _count (mapper, query, opts) {\n    opts || (opts = {})\n    query || (query = {})\n\n    const sqlBuilder = utils.isUndefined(opts.transaction) ? this.knex : opts.transaction\n    const sqlText = this.filterQuery(sqlBuilder(getTable(mapper)), query, opts)\n      .count('* as count')\n      .toString()\n\n    const countQuery = new SqlFieldsQuery(sqlText)\n    const cache = await this.igniteClient.getCache(getCacheName(mapper))\n    const result = await (await cache.query(countQuery)).getAll()\n\n    return [result[0][0], {}]\n  },\n\n  async _create (mapper, props, opts) {\n    const idAttribute = mapper.idAttribute\n    props || (props = {})\n    opts || (opts = {})\n\n    props = escapeData(mapper, props, this.knex)\n\n    const sqlBuilder = utils.isUndefined(opts.transaction) ? this.knex : opts.transaction\n    const sqlText = sqlBuilder(getTable(mapper))\n      .insert(props)\n      .toString()\n\n    const createQuery = new SqlFieldsQuery(sqlText)\n    const cache = await this.igniteClient.getCache(getCacheName(mapper))\n    await cache.query(createQuery)\n\n    return this._find(mapper, props[idAttribute], opts)\n  },\n\n  async _createMany (mapper, props, opts) {\n    props || (props = {})\n    opts || (opts = {})\n\n    props = props.map((singleProps) => {\n      singleProps = escapeData(mapper, singleProps, this.knex)\n      return singleProps\n    })\n\n    const sqlBuilder = utils.isUndefined(opts.transaction) ? this.knex : opts.transaction\n    const sqlText = sqlBuilder(getTable(mapper))\n      .insert(props)\n      .toString()\n\n    const createQuery = new SqlFieldsQuery(sqlText)\n    const cache = await this.igniteClient.getCache(getCacheName(mapper))\n    await cache.query(createQuery)\n\n    const query = {\n      where: {\n        [mapper.idAttribute]: {\n          'in': props.map((singleProps) => singleProps[mapper.idAttribute])\n        }\n      }\n    }\n\n    return this._findAll(mapper, query, opts)\n  },\n\n  async _destroy (mapper, id, opts) {\n    opts || (opts = {})\n\n    const record = await this._find(mapper, id, opts)\n    const sqlBuilder = utils.isUndefined(opts.transaction) ? this.knex : opts.transaction\n    const sqlText = sqlBuilder(getTable(mapper))\n      .where(mapper.idAttribute, toString(id))\n      .del()\n      .toString()\n\n    const destroyQuery = new SqlFieldsQuery(sqlText)\n    const cache = await this.igniteClient.getCache(getCacheName(mapper))\n    await cache.query(destroyQuery)\n\n    return record\n  },\n\n  async _destroyAll (mapper, query, opts) {\n    query || (query = {})\n    opts || (opts = {})\n\n    const sqlBuilder = utils.isUndefined(opts.transaction) ? this.knex : opts.transaction\n    const sqlText = this.filterQuery(sqlBuilder(getTable(mapper)), query, opts)\n      .del()\n      .toString()\n\n    const destroyAllQuery = new SqlFieldsQuery(sqlText)\n    const cache = await this.igniteClient.getCache(getCacheName(mapper))\n    await cache.query(destroyAllQuery)\n    console.log(sqlText)\n\n    return [[], {}]\n  },\n\n  async _find (mapper, id, opts) {\n    opts || (opts = {})\n\n    const sqlBuilder = utils.isUndefined(opts.transaction) ? this.knex : opts.transaction\n    const table = getTable(mapper)\n\n    let sqlText\n    if (Array.isArray(id)) {\n      if (!mapper.compositePk) {\n        throw new Error('Model does not have composite PK')\n      }\n\n      sqlText = this.compositePk(mapper, getFields(mapper, sqlBuilder).from(table), id, this.knex)\n    } else {\n      sqlText = getFields(mapper, sqlBuilder)\n        .from(table)\n        .where(`${table}.${mapper.idAttribute}`, id)\n    }\n\n    sqlText = sqlText.toString()\n\n    const findQuery = new SqlFieldsQuery(sqlText)\n\n    const cache = await this.igniteClient.getCache(getCacheName(mapper))\n    const result = await (await cache.query(findQuery)).getAll()\n\n    return [translateToKnex(mapper, result[0]), {}]\n  },\n\n  async _findAll (mapper, query, opts) {\n    query || (query = {})\n    opts || (opts = {})\n\n    const sqlText = this.filterQuery(this.selectTable(mapper, opts), query, opts).toString()\n\n    const findAllQuery = new SqlFieldsQuery(sqlText)\n\n    const cache = await this.igniteClient.getCache(getCacheName(mapper))\n    const records = await (await cache.query(findAllQuery)).getAll()\n    const result = records.map((record) => {\n      return translateToKnex(mapper, record)\n    })\n\n    return [result, {}]\n  },\n\n  async _sum (mapper, field, query, opts) {\n    if (!utils.isString(field)) {\n      throw new Error('field must be a string!')\n    }\n    opts || (opts = {})\n    query || (query = {})\n\n    const sqlBuilder = utils.isUndefined(opts.transaction) ? this.knex : opts.transaction\n    const sqlText = this.filterQuery(sqlBuilder(getTable(mapper)), query, opts)\n      .sum(`${field} as sum`)\n      .toString()\n\n    const sumQuery = new SqlFieldsQuery(sqlText)\n    const cache = await this.igniteClient.getCache(getCacheName(mapper))\n    const result = await (await cache.query(sumQuery)).getAll()\n\n    return [result[0][0], {}]\n  },\n\n  async _update (mapper, id, props, opts) {\n    props || (props = {})\n    opts || (opts = {})\n\n    props = escapeData(mapper, props, this.knex)\n\n    const sqlBuilder = utils.isUndefined(opts.transaction) ? this.knex : opts.transaction\n    let sqlText\n\n    const ids = []\n    if (mapper.compositePk) {\n      for (const field of mapper.compositePk) {\n        ids.push(props[field])\n        delete props[field]\n      }\n\n      sqlText = this.compositePk(mapper, sqlBuilder(getTable(mapper)), ids, this.knex)\n    } else {\n      for (const field in props) {\n        if (props.hasOwnProperty(field) && field === mapper.idAttribute) {\n          delete props[field]\n        }\n      }\n\n      sqlText = sqlBuilder(getTable(mapper))\n        .where(mapper.idAttribute, toString(id))\n    }\n\n    sqlText = sqlText.update(props).toString()\n\n    const updateQuery = new SqlFieldsQuery(sqlText)\n    const cache = await this.igniteClient.getCache(getCacheName(mapper))\n    await cache.query(updateQuery)\n\n    return mapper.compositePk ? this._find(mapper, ids, opts) : this._find(mapper, id, opts)\n  },\n\n  async _updateAll (mapper, props, query, opts) {\n    const idAttribute = mapper.idAttribute\n    props || (props = {})\n    query || (query = {})\n    opts || (opts = {})\n\n    props = props.map((singleProps) => {\n      delete singleProps[idAttribute]\n      singleProps = escapeData(mapper, singleProps, this.knex)\n      return singleProps\n    })\n\n    const result = await this._findAll(mapper, query, opts)\n\n    const records = result[0]\n    const ids = records.map((record) => record[idAttribute])\n    const sqlBuilder = utils.isUndefined(opts.transaction) ? this.knex : opts.transaction\n\n    const sqlText = this.filterQuery(sqlBuilder(getTable(mapper)), query, opts).update(props).toString()\n\n    const updateAllQuery = new SqlFieldsQuery(sqlText)\n    const cache = await this.igniteClient.getCache(getCacheName(mapper))\n    await cache.query(updateAllQuery)\n\n    const _query = { where: {} }\n\n    _query.where[idAttribute] = { 'in': ids }\n    return this._findAll(mapper, _query, opts)\n  },\n\n  async _updateMany (mapper, records, opts) {\n    const idAttribute = mapper.idAttribute\n    records || (records = [])\n    opts || (opts = {})\n\n    const tasks = records.map((record) => this._update(mapper, record[idAttribute], record, opts))\n\n    return Promise.all(tasks).then((results) => [results.map((result) => result[0]), {}])\n  },\n\n  compositePk (mapper, sqlBuilder, pkValues, knexInstance) {\n    const query = {}\n\n    for (const [index, field] of mapper.compositePk.entries()) {\n      query[field] = pkValues[index]\n      // switch (mapper.schema.properties[field].type) {\n      //   case 'date':\n      //     query[field] = knexInstance.raw(`TIMESTAMP '${pkValues[index].toISOString()}'`)\n      //     break\n      //   default:\n      //     query[field] = pkValues[index]\n      //     break\n      // }\n    }\n\n    return sqlBuilder.where(query)\n  },\n\n  applyWhereFromObject (sqlBuilder, where, opts) {\n    utils.forOwn(where, (criteria, field) => {\n      if (!utils.isObject(criteria)) {\n        criteria = { '==': criteria }\n      }\n      // Apply filter for each operator\n      utils.forOwn(criteria, (value, operator) => {\n        let isOr = false\n        if (operator && operator[0] === '|') {\n          operator = operator.substr(1)\n          isOr = true\n        }\n        let predicateFn = this.getOperator(operator, opts)\n        if (predicateFn) {\n          sqlBuilder = predicateFn(sqlBuilder, field, value, isOr, this.knex)\n        } else {\n          throw new Error(`Operator ${operator} not supported!`)\n        }\n      })\n    })\n    return sqlBuilder\n  },\n\n  applyWhereFromArray (sqlBuilder, where, opts) {\n    where.forEach((_where, i) => {\n      if (_where === 'and' || _where === 'or') {\n        return\n      }\n      const self = this\n      const prev = where[i - 1]\n      const parser = utils.isArray(_where) ? this.applyWhereFromArray : this.applyWhereFromObject\n      if (prev) {\n        if (prev === 'or') {\n          sqlBuilder = sqlBuilder.orWhere(function () {\n            parser.call(self, this, _where, opts)\n          })\n        } else {\n          sqlBuilder = sqlBuilder.andWhere(function () {\n            parser.call(self, this, _where, opts)\n          })\n        }\n      } else {\n        sqlBuilder = sqlBuilder.where(function () {\n          parser.call(self, this, _where, opts)\n        })\n      }\n    })\n    return sqlBuilder\n  },\n\n  filterQuery (sqlBuilder, query, opts) {\n    query = utils.plainCopy(query || {})\n    opts || (opts = {})\n    opts.operators || (opts.operators = {})\n    query.where || (query.where = {})\n    query.orderBy || (query.orderBy = query.sort)\n    query.orderBy || (query.orderBy = [])\n    query.skip || (query.skip = query.offset)\n\n    // Transform non-keyword properties to \"where\" clause configuration\n    utils.forOwn(query, (config, keyword) => {\n      if (reserved.indexOf(keyword) === -1) {\n        if (utils.isObject(config)) {\n          query.where[keyword] = config\n        } else {\n          query.where[keyword] = {\n            '==': config\n          }\n        }\n        delete query[keyword]\n      }\n    })\n\n    // Filter\n    if (utils.isObject(query.where) && Object.keys(query.where).length !== 0) {\n      // Apply filter for each field\n      sqlBuilder = this.applyWhereFromObject(sqlBuilder, query.where, opts)\n    } else if (utils.isArray(query.where)) {\n      sqlBuilder = this.applyWhereFromArray(sqlBuilder, query.where, opts)\n    }\n\n    // Sort\n    if (query.orderBy) {\n      if (utils.isString(query.orderBy)) {\n        query.orderBy = [\n          [query.orderBy, 'asc']\n        ]\n      }\n      for (var i = 0; i < query.orderBy.length; i++) {\n        if (utils.isString(query.orderBy[i])) {\n          query.orderBy[i] = [query.orderBy[i], 'asc']\n        }\n        sqlBuilder = sqlBuilder.orderBy(query.orderBy[i][0], (query.orderBy[i][1] || '').toUpperCase() === 'DESC' ? 'desc' : 'asc')\n      }\n    }\n\n    // Offset\n    if (query.skip) {\n      sqlBuilder = sqlBuilder.offset(+query.skip)\n    }\n\n    // Limit\n    if (query.limit) {\n      sqlBuilder = sqlBuilder.limit(+query.limit)\n    }\n\n    return sqlBuilder\n  },\n\n  /**\n   * Resolve the predicate function for the specified operator based on the\n   * given options and this adapter's settings.\n   *\n   * @name IgniteAdapter#getOperator\n   * @method\n   * @param {string} operator The name of the operator.\n   * @param {Object} [opts] Configuration options.\n   * @param {Object} [opts.operators] Override the default predicate functions\n   * for specified operators.\n   * @return {*} The predicate function for the specified operator.\n   */\n  getOperator (operator, opts) {\n    opts || (opts = {})\n    opts.operators || (opts.operators = {})\n    let ownOps = this.operators || {}\n    return utils.isUndefined(opts.operators[operator]) ? ownOps[operator] : opts.operators[operator]\n  },\n\n  getTable (mapper) {\n    return mapper.table || snakeCase(mapper.name)\n  },\n\n  selectTable (mapper, opts) {\n    opts || (opts = {})\n    const query = utils.isUndefined(opts.query) ? this.knex : opts.query\n    const table = this.getTable(mapper)\n    return getFields(mapper, query).from(table)\n  }\n})\n\n/**\n * Details of the current version of the `js-data-ignite` module.\n *\n * @example\n * import { version } from 'js-data-ignite';\n * console.log(version.full);\n *\n * @name module:js-data-ignite.version\n * @type {object}\n * @property {string} version.full The full semver value.\n * @property {number} version.major The major version number.\n * @property {number} version.minor The minor version number.\n * @property {number} version.patch The patch version number.\n * @property {(string|boolean)} version.alpha The alpha version value,\n * otherwise `false` if the current version is not alpha.\n * @property {(string|boolean)} version.beta The beta version value,\n * otherwise `false` if the current version is not beta.\n */\nexport const version = '<%= version %>'\n"],"names":["IgniteClient","require","SqlFieldsQuery","DEFAULTS","equal","query","field","value","isOr","getWhereType","notEqual","MILES_REGEXP","KILOMETERS_REGEXP","OPERATORS","Error","knexInstance","raw","table","filterField","filterValue","where","select","radius","unitsPerDegree","test","match","split","map","c","trim","latitudeColumn","longitudeColumn","center","latitude","longitude","whereBetween","Math","cos","PI","calculateDistance","distanceColumn","knex","Object","freeze","IgniteAdapter","opts","classCallCheck","knexOpts","igniteClient","fillIn","defineProperties","undefined","call","operators","getTable","mapper","snakeCase","name","getCacheName","toUpperCase","getFields","sqlBuilder","fields","schema","properties","hasOwnProperty","escapeData","props","types","Array","isArray","type","join","JSON","stringify","toISOString","replace","translateToKnex","values","length","result","i","parse","extend","utils","Adapter","isUndefined","transaction","sqlText","filterQuery","count","toString","countQuery","cache","getCache","getAll","idAttribute","insert","createQuery","_find","singleProps","_findAll","id","record","del","destroyQuery","destroyAllQuery","log","compositePk","from","findQuery","selectTable","findAllQuery","records","isString","sum","sumQuery","ids","push","update","updateQuery","updateAllQuery","_query","tasks","_update","Promise","all","then","results","pkValues","entries","index","forOwn","criteria","isObject","operator","substr","predicateFn","getOperator","forEach","_where","self","prev","parser","applyWhereFromArray","applyWhereFromObject","orWhere","andWhere","plainCopy","orderBy","sort","skip","offset","config","keyword","reserved","indexOf","keys","limit","ownOps","version"],"mappings":"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"}