{"version":3,"file":"js-data-ignite.js","sources":["../src/index.js"],"sourcesContent":["import knex from 'knex'\nimport { utils } from 'js-data'\nimport {\n  Adapter,\n  reserved\n} from 'js-data-adapter'\nimport toString from 'lodash.tostring'\nimport snakeCase from 'lodash.snakecase'\n\nconst IgniteClient = require('apache-ignite-client')\n\nconst IgniteClientConfiguration = IgniteClient.IgniteClientConfiguration\nconst SqlFieldsQuery = IgniteClient.SqlFieldsQuery\n\nconst DEFAULTS = {}\n\nconst equal = function (query, field, value, isOr) {\n  if (value === null) {\n    return query[isOr ? 'orWhereNull' : 'whereNull'](field)\n  }\n  return query[getWhereType(isOr)](field, value)\n}\n\nconst notEqual = function (query, field, value, isOr) {\n  if (value === null) {\n    return query[isOr ? 'orWhereNotNull' : 'whereNotNull'](field)\n  }\n  return query[getWhereType(isOr)](field, '!=', value)\n}\n\nconst getWhereType = function (isOr) {\n  return isOr ? 'orWhere' : 'where'\n}\n\nconst MILES_REGEXP = /(\\d+(\\.\\d+)?)\\s*(m|M)iles$/\nconst KILOMETERS_REGEXP = /(\\d+(\\.\\d+)?)\\s*(k|K)$/\n\n/**\n * Default predicate functions for the filtering operators.\n *\n * @name module:js-data-sql.OPERATORS\n * @property {Function} == Equality operator.\n * @property {Function} != Inequality operator.\n * @property {Function} > \"Greater than\" operator.\n * @property {Function} >= \"Greater than or equal to\" operator.\n * @property {Function} < \"Less than\" operator.\n * @property {Function} <= \"Less than or equal to\" operator.\n * @property {Function} isectEmpty Operator to test that the intersection\n * between two arrays is empty. Not supported.\n * @property {Function} isectNotEmpty Operator to test that the intersection\n * between two arrays is NOT empty. Not supported.\n * @property {Function} in Operator to test whether a value is found in the\n * provided array.\n * @property {Function} notIn Operator to test whether a value is NOT found in\n * the provided array.\n * @property {Function} contains Operator to test whether an array contains the\n * provided value. Not supported.\n * @property {Function} notContains Operator to test whether an array does NOT\n * contain the provided value. Not supported.\n */\nexport const OPERATORS = {\n  '=': equal,\n  '==': equal,\n  '===': equal,\n  '!=': notEqual,\n  '!==': notEqual,\n  '>': function (query, field, value, isOr) {\n    return query[getWhereType(isOr)](field, '>', value)\n  },\n  '>=': function (query, field, value, isOr) {\n    return query[getWhereType(isOr)](field, '>=', value)\n  },\n  '<': function (query, field, value, isOr) {\n    return query[getWhereType(isOr)](field, '<', value)\n  },\n  '<=': function (query, field, value, isOr) {\n    return query[getWhereType(isOr)](field, '<=', value)\n  },\n  'isectEmpty': function (query, field, value, isOr) {\n    throw new Error('isectEmpty not supported!')\n  },\n  'isectNotEmpty': function (query, field, value, isOr) {\n    throw new Error('isectNotEmpty not supported!')\n  },\n  'in': function (query, field, value, isOr) {\n    return query[getWhereType(isOr)](field, 'in', value)\n  },\n  'notIn': function (query, field, value, isOr) {\n    return query[isOr ? 'orNotIn' : 'notIn'](field, value)\n  },\n  'contains': function (query, field, value, isOr) {\n    throw new Error('contains not supported!')\n  },\n  'notContains': function (query, field, value, isOr) {\n    throw new Error('notContains not supported!')\n  },\n  'like': function (query, field, value, isOr) {\n    return query[getWhereType(isOr)](field, 'like', value)\n  },\n  'likei': function (query, field, value, isOr, knexInstance) {\n    return query[getWhereType(isOr)](knexInstance.raw(`LOWER(${field})`), 'like', knexInstance.raw(`LOWER('${value}')`))\n  },\n  'subquery': function (query, field, value, isOr, knexInstance) {\n    if (!value.field || !value.table || !value.filterField || !value.filterValue) {\n      throw new Error('Missing subquery fields')\n    }\n\n    return query[getWhereType(isOr)](field, 'in', knexInstance(value.table).where(value.filterField, value.filterValue).select(value.field))\n  },\n  'near': function (query, field, value, isOr) {\n    let radius\n    let unitsPerDegree\n    if (typeof value.radius === 'number' || MILES_REGEXP.test(value.radius)) {\n      radius = typeof value.radius === 'number' ? value.radius : value.radius.match(MILES_REGEXP)[1]\n      unitsPerDegree = 69.0 // miles per degree\n    } else if (KILOMETERS_REGEXP.test(value.radius)) {\n      radius = value.radius.match(KILOMETERS_REGEXP)[1]\n      unitsPerDegree = 111.045 // kilometers per degree;\n    } else {\n      throw new Error('Unknown radius distance units')\n    }\n\n    let [latitudeColumn, longitudeColumn] = field.split(',').map((c) => c.trim())\n    let [latitude, longitude] = value.center\n\n    // Uses indexes on `latitudeColumn` / `longitudeColumn` if available\n    query = query\n      .whereBetween(latitudeColumn, [\n        latitude - (radius / unitsPerDegree),\n        latitude + (radius / unitsPerDegree)\n      ])\n      .whereBetween(longitudeColumn, [\n        longitude - (radius / (unitsPerDegree * Math.cos(latitude * (Math.PI / 180)))),\n        longitude + (radius / (unitsPerDegree * Math.cos(latitude * (Math.PI / 180))))\n      ])\n\n    if (value.calculateDistance) {\n      let distanceColumn = (typeof value.calculateDistance === 'string') ? value.calculateDistance : 'distance'\n      query = query.select(knex.raw(`\n        ${unitsPerDegree} * DEGREES(ACOS(\n          COS(RADIANS(?)) * COS(RADIANS(${latitudeColumn})) *\n          COS(RADIANS(${longitudeColumn}) - RADIANS(?)) +\n          SIN(RADIANS(?)) * SIN(RADIANS(${latitudeColumn}))\n        )) AS ${distanceColumn}`, [latitude, longitude, latitude]))\n    }\n    return query\n  }\n}\n\nObject.freeze(OPERATORS)\n\n/**\n * IgniteAdapter class.\n *\n * @example\n * // Use Container instead of DataStore on the server\n * import { Container } from 'js-data';\n * import IgniteAdapter from 'js-data-sql';\n *\n * // Create a store to hold your Mappers\n * const store = new Container();\n *\n * // Create an instance of IgniteAdapter with default settings\n * const adapter = new IgniteAdapter();\n *\n * // Mappers in \"store\" will use the Sql adapter by default\n * store.registerAdapter('sql', adapter, { default: true });\n *\n * // Create a Mapper that maps to a \"user\" table\n * store.defineMapper('user');\n *\n * @class IgniteAdapter\n * @extends Adapter\n * @param {Object} [opts] Configuration options.\n * @param {boolean} [opts.debug=false] See {@link Adapter#debug}.\n * @param {Object} [opts.knexOpts] See {@link IgniteAdapter#knexOpts}.\n * @param {Object} [opts.operators] See {@link IgniteAdapter#operators}.\n * @param {boolean} [opts.raw=false] See {@link Adapter#raw}.\n */\nexport function IgniteAdapter (opts) {\n  utils.classCallCheck(this, IgniteAdapter)\n  opts || (opts = {})\n  opts.knexOpts || (opts.knexOpts = {})\n  opts.igniteOpts || (opts.igniteOpts = {})\n  utils.fillIn(opts, DEFAULTS)\n\n  Object.defineProperties(this, {\n    knex: {\n      writable: true,\n      value: undefined\n    },\n\n    igniteClient: {\n      writable: true,\n      value: undefined\n    }\n  })\n\n  Adapter.call(this, opts)\n\n  /**\n   * Override the default predicate functions for specified operators.\n   *\n   * @name IgniteAdapter#operators\n   * @type {Object}\n   * @default {}\n   */\n  this.knex || (this.knex = knex(this.knexOpts))\n\n  /**\n   * Override the default predicate functions for specified operators.\n   *\n   * @name IgniteAdapter#operators\n   * @type {Object}\n   * @default {}\n   */\n  this.operators || (this.operators = {})\n  utils.fillIn(this.operators, OPERATORS)\n\n  // this.igniteOpts || (this.igniteOpts = {})\n\n  this.igniteClient || (this.igniteClient = new IgniteClient(opts.igniteOpts.listener))\n\n  if (opts.igniteOpts.debug) {\n    this.igniteClient.setDebug(true)\n  }\n\n  const igniteClientConfiguration = new IgniteClientConfiguration(...opts.igniteOpts.endpoints)\n    .setUserName(opts.igniteOpts.username)\n    .setPassword(opts.igniteOpts.password)\n    .setConnectionOptions(opts.igniteOpts.useTLS, opts.igniteOpts.connectionOptions)\n\n  this.igniteClientConfiguration || (this.igniteClientConfiguration = igniteClientConfiguration)\n\n  if (!opts.igniteOpts.manualConnect) {\n    this.igniteClient.connect(this.igniteClientConfiguration)\n  }\n}\n\n// async function connect () {\n//   return this.igniteClient.connect(this.igniteClientConfiguration)\n// }\n\nfunction getTable (mapper) {\n  return mapper.table || snakeCase(mapper.name)\n}\n\nfunction getCacheName (mapper) {\n  return 'SQL_PUBLIC_' + getTable(mapper).toUpperCase()\n}\n\nfunction getFields (mapper, sqlBuilder) {\n  const fields = mapper.schema.properties\n  const table = getTable(mapper)\n\n  for (const field in fields) {\n    if (fields.hasOwnProperty(field)) {\n      sqlBuilder = sqlBuilder.select(`${table}.${field}`)\n    }\n  }\n\n  return sqlBuilder\n}\n\nfunction translateToKnex (mapper, values) {\n  if (!values || !values.length) {\n    return null\n  }\n\n  const fields = mapper.schema.properties\n\n  const result = {}\n  let i = 0\n\n  for (const field in fields) {\n    if (fields.hasOwnProperty(field)) {\n      switch (fields[field].type) {\n        case 'array':\n          result[field] = JSON.parse(values[i++].replace(/\\\\/g, ''))\n          break\n        default:\n          result[field] = values[i++]\n          break\n      }\n    }\n  }\n\n  return result\n}\n\n/**\n * Alternative to ES2015 class syntax for extending `IgniteAdapter`.\n *\n * @example <caption>Using the ES2015 class syntax.</caption>\n * class MyIgniteAdapter extends IgniteAdapter {...};\n * const adapter = new MyIgniteAdapter();\n *\n * @example <caption>Using {@link IgniteAdapter.extend}.</caption>\n * const instanceProps = {...};\n * const classProps = {...};\n *\n * const MyIgniteAdapter = IgniteAdapter.extend(instanceProps, classProps);\n * const adapter = new MyIgniteAdapter();\n *\n * @method IgniteAdapter.extend\n * @static\n * @param {Object} [instanceProps] Properties that will be added to the\n * prototype of the subclass.\n * @param {Object} [classProps] Properties that will be added as static\n * properties to the subclass itself.\n * @return {Constructor} Subclass of `IgniteAdapter`.\n */\nIgniteAdapter.extend = utils.extend\n\nAdapter.extend({\n  constructor: IgniteAdapter,\n\n  async connect () {\n    return this.igniteClient.connect(this.igniteClientConfiguration)\n  },\n\n  async _count (mapper, query, opts) {\n    opts || (opts = {})\n    query || (query = {})\n\n    const sqlBuilder = utils.isUndefined(opts.transaction) ? this.knex : opts.transaction\n    const sqlText = this.filterQuery(sqlBuilder(getTable(mapper)), query, opts)\n      .count('* as count')\n      .toString()\n\n    const countQuery = new SqlFieldsQuery(sqlText)\n    const cache = await this.igniteClient.getCache(getCacheName(mapper))\n    const result = await (await cache.query(countQuery)).getAll()\n\n    return [result[0][0], {}]\n  },\n\n  async _create (mapper, props, opts) {\n    const idAttribute = mapper.idAttribute\n    props || (props = {})\n    opts || (opts = {})\n\n    for (const field in props) {\n      if (props.hasOwnProperty(field)) {\n        switch (mapper.schema.properties[field].type) {\n          case 'array':\n            props[field] = JSON.stringify(props[field])\n            break\n          default:\n            break\n        }\n      }\n    }\n\n    const sqlBuilder = utils.isUndefined(opts.transaction) ? this.knex : opts.transaction\n    const sqlText = sqlBuilder(getTable(mapper))\n      .insert(props)\n      .toString()\n\n    const createQuery = new SqlFieldsQuery(sqlText)\n    const cache = await this.igniteClient.getCache(getCacheName(mapper))\n    await cache.query(createQuery)\n\n    return this._find(mapper, props[idAttribute], opts)\n  },\n\n  async _createMany (mapper, props, opts) {\n    props || (props = {})\n    opts || (opts = {})\n\n    props = props.map((singleProps) => {\n      for (const field in singleProps) {\n        if (singleProps.hasOwnProperty(field)) {\n          const element = singleProps[field]\n          if (Array.isArray(element)) {\n            singleProps[field] = JSON.stringify(element)\n          }\n        }\n      }\n      return singleProps\n    })\n\n    const sqlBuilder = utils.isUndefined(opts.transaction) ? this.knex : opts.transaction\n    const sqlText = sqlBuilder(getTable(mapper))\n      .insert(props)\n      .toString()\n\n    const createQuery = new SqlFieldsQuery(sqlText)\n    const cache = await this.igniteClient.getCache(getCacheName(mapper))\n    await cache.query(createQuery)\n\n    const query = {\n      where: {\n        [mapper.idAttribute]: {\n          'in': props.map((singleProps) => singleProps[mapper.idAttribute])\n        }\n      }\n    }\n\n    return this._findAll(mapper, query, opts)\n  },\n\n  async _destroy (mapper, id, opts) {\n    opts || (opts = {})\n\n    const record = await this._find(mapper, id, opts)\n    const sqlBuilder = utils.isUndefined(opts.transaction) ? this.knex : opts.transaction\n    const sqlText = sqlBuilder(getTable(mapper))\n      .where(mapper.idAttribute, toString(id))\n      .del()\n      .toString()\n\n    const destroyQuery = new SqlFieldsQuery(sqlText)\n    const cache = await this.igniteClient.getCache(getCacheName(mapper))\n    await cache.query(destroyQuery)\n\n    return record\n  },\n\n  async _destroyAll (mapper, query, opts) {\n    query || (query = {})\n    opts || (opts = {})\n\n    const records = await this._findAll(mapper, query, opts)\n    const sqlBuilder = utils.isUndefined(opts.transaction) ? this.knex : opts.transaction\n    const sqlText = this.filterQuery(sqlBuilder(getTable(mapper)), query, opts)\n      .del()\n      .toString()\n\n    const destroyAllQuery = new SqlFieldsQuery(sqlText)\n    const cache = await this.igniteClient.getCache(getCacheName(mapper))\n    await cache.query(destroyAllQuery)\n\n    return records\n  },\n\n  async _find (mapper, id, opts) {\n    opts || (opts = {})\n\n    const sqlBuilder = utils.isUndefined(opts.transaction) ? this.knex : opts.transaction\n    const table = getTable(mapper)\n\n    let sqlText\n    if (Array.isArray(id)) {\n      if (!mapper.compositePk) {\n        throw new Error('Model does not have composite PK')\n      }\n\n      sqlText = this.compositePk(mapper, getFields(mapper, sqlBuilder).from(table), id, this.knex)\n    } else {\n      sqlText = getFields(mapper, sqlBuilder)\n        .from(table)\n        .where(`${table}.${mapper.idAttribute}`, toString(id))\n    }\n\n    sqlText = sqlText.toString()\n\n    const findQuery = new SqlFieldsQuery(sqlText)\n\n    const cache = await this.igniteClient.getCache(getCacheName(mapper))\n    const result = await (await cache.query(findQuery)).getAll()\n\n    return [translateToKnex(mapper, result[0]), {}]\n  },\n\n  async _findAll (mapper, query, opts) {\n    query || (query = {})\n    opts || (opts = {})\n\n    const sqlText = this.filterQuery(this.selectTable(mapper, opts), query, opts).toString()\n\n    const findAllQuery = new SqlFieldsQuery(sqlText)\n\n    const cache = await this.igniteClient.getCache(getCacheName(mapper))\n    const records = await (await cache.query(findAllQuery)).getAll()\n    const result = records.map((record) => {\n      return translateToKnex(mapper, record)\n    })\n\n    return [result, {}]\n  },\n\n  async _sum (mapper, field, query, opts) {\n    if (!utils.isString(field)) {\n      throw new Error('field must be a string!')\n    }\n    opts || (opts = {})\n    query || (query = {})\n\n    const sqlBuilder = utils.isUndefined(opts.transaction) ? this.knex : opts.transaction\n    const sqlText = this.filterQuery(sqlBuilder(getTable(mapper)), query, opts)\n      .sum(`${field} as sum`)\n      .toString()\n\n    const sumQuery = new SqlFieldsQuery(sqlText)\n    const cache = await this.igniteClient.getCache(getCacheName(mapper))\n    const result = await (await cache.query(sumQuery)).getAll()\n\n    return [result[0][0], {}]\n  },\n\n  async _update (mapper, id, props, opts) {\n    props || (props = {})\n    opts || (opts = {})\n\n    for (const field in props) {\n      if (props.hasOwnProperty(field)) {\n        const element = props[field]\n        if (Array.isArray(element)) {\n          props[field] = JSON.stringify(element)\n        }\n      }\n    }\n\n    const sqlBuilder = utils.isUndefined(opts.transaction) ? this.knex : opts.transaction\n    let sqlText\n\n    const ids = []\n    if (mapper.compositePk) {\n      for (const field of mapper.compositePk) {\n        ids.push(props[field])\n        delete props[field]\n      }\n\n      sqlText = this.compositePk(mapper, sqlBuilder(getTable(mapper)), ids, this.knex)\n    } else {\n      for (const field in props) {\n        if (props.hasOwnProperty(field) && field === mapper.idAttribute) {\n          delete props[field]\n        }\n      }\n\n      sqlText = sqlBuilder(getTable(mapper))\n        .where(mapper.idAttribute, toString(id))\n    }\n\n    sqlText = sqlText.update(props).toString()\n\n    const updateQuery = new SqlFieldsQuery(sqlText)\n    const cache = await this.igniteClient.getCache(getCacheName(mapper))\n    await cache.query(updateQuery)\n\n    return mapper.compositePk ? this._find(mapper, ids, opts) : this._find(mapper, id, opts)\n  },\n\n  async _updateAll (mapper, props, query, opts) {\n    const idAttribute = mapper.idAttribute\n    props || (props = {})\n    query || (query = {})\n    opts || (opts = {})\n\n    props = props.map((singleProps) => {\n      delete singleProps[idAttribute]\n      return singleProps\n    })\n\n    const result = await this._findAll(mapper, query, opts)\n\n    const records = result[0]\n    const ids = records.map((record) => record[idAttribute])\n    const sqlBuilder = utils.isUndefined(opts.transaction) ? this.knex : opts.transaction\n\n    const sqlText = this.filterQuery(sqlBuilder(getTable(mapper)), query, opts).update(props).toString()\n\n    const updateAllQuery = new SqlFieldsQuery(sqlText)\n    const cache = await this.igniteClient.getCache(getCacheName(mapper))\n    await cache.query(updateAllQuery)\n\n    const _query = { where: {} }\n\n    _query.where[idAttribute] = { 'in': ids }\n    return this._findAll(mapper, _query, opts)\n  },\n\n  async _updateMany (mapper, records, opts) {\n    const idAttribute = mapper.idAttribute\n    records || (records = [])\n    opts || (opts = {})\n\n    const tasks = records.map((record) => this._update(mapper, record[idAttribute], record, opts))\n\n    return Promise.all(tasks).then((results) => [results.map((result) => result[0]), {}])\n  },\n\n  compositePk (mapper, sqlBuilder, pkValues, knexInstance) {\n    const query = {}\n\n    for (const [index, field] of mapper.compositePk.entries()) {\n      switch (mapper.schema.properties[field].type) {\n        case 'date':\n          query[field] = knexInstance.raw(`TIMESTAMP '${pkValues[index].toISOString()}'`)\n          break\n        default:\n          query[field] = pkValues[index]\n          break\n      }\n    }\n\n    return sqlBuilder.where(query)\n  },\n\n  applyWhereFromObject (sqlBuilder, where, opts) {\n    utils.forOwn(where, (criteria, field) => {\n      if (!utils.isObject(criteria)) {\n        criteria = { '==': criteria }\n      }\n      // Apply filter for each operator\n      utils.forOwn(criteria, (value, operator) => {\n        let isOr = false\n        if (operator && operator[0] === '|') {\n          operator = operator.substr(1)\n          isOr = true\n        }\n        let predicateFn = this.getOperator(operator, opts)\n        if (predicateFn) {\n          sqlBuilder = predicateFn(sqlBuilder, field, value, isOr, this.knex)\n        } else {\n          throw new Error(`Operator ${operator} not supported!`)\n        }\n      })\n    })\n    return sqlBuilder\n  },\n\n  applyWhereFromArray (sqlBuilder, where, opts) {\n    where.forEach((_where, i) => {\n      if (_where === 'and' || _where === 'or') {\n        return\n      }\n      const self = this\n      const prev = where[i - 1]\n      const parser = utils.isArray(_where) ? this.applyWhereFromArray : this.applyWhereFromObject\n      if (prev) {\n        if (prev === 'or') {\n          sqlBuilder = sqlBuilder.orWhere(function () {\n            parser.call(self, this, _where, opts)\n          })\n        } else {\n          sqlBuilder = sqlBuilder.andWhere(function () {\n            parser.call(self, this, _where, opts)\n          })\n        }\n      } else {\n        sqlBuilder = sqlBuilder.where(function () {\n          parser.call(self, this, _where, opts)\n        })\n      }\n    })\n    return sqlBuilder\n  },\n\n  filterQuery (sqlBuilder, query, opts) {\n    query = utils.plainCopy(query || {})\n    opts || (opts = {})\n    opts.operators || (opts.operators = {})\n    query.where || (query.where = {})\n    query.orderBy || (query.orderBy = query.sort)\n    query.orderBy || (query.orderBy = [])\n    query.skip || (query.skip = query.offset)\n\n    // Transform non-keyword properties to \"where\" clause configuration\n    utils.forOwn(query, (config, keyword) => {\n      if (reserved.indexOf(keyword) === -1) {\n        if (utils.isObject(config)) {\n          query.where[keyword] = config\n        } else {\n          query.where[keyword] = {\n            '==': config\n          }\n        }\n        delete query[keyword]\n      }\n    })\n\n    // Filter\n    if (utils.isObject(query.where) && Object.keys(query.where).length !== 0) {\n      // Apply filter for each field\n      sqlBuilder = this.applyWhereFromObject(sqlBuilder, query.where, opts)\n    } else if (utils.isArray(query.where)) {\n      sqlBuilder = this.applyWhereFromArray(sqlBuilder, query.where, opts)\n    }\n\n    // Sort\n    if (query.orderBy) {\n      if (utils.isString(query.orderBy)) {\n        query.orderBy = [\n          [query.orderBy, 'asc']\n        ]\n      }\n      for (var i = 0; i < query.orderBy.length; i++) {\n        if (utils.isString(query.orderBy[i])) {\n          query.orderBy[i] = [query.orderBy[i], 'asc']\n        }\n        sqlBuilder = sqlBuilder.orderBy(query.orderBy[i][0], (query.orderBy[i][1] || '').toUpperCase() === 'DESC' ? 'desc' : 'asc')\n      }\n    }\n\n    // Offset\n    if (query.skip) {\n      sqlBuilder = sqlBuilder.offset(+query.skip)\n    }\n\n    // Limit\n    if (query.limit) {\n      sqlBuilder = sqlBuilder.limit(+query.limit)\n    }\n\n    return sqlBuilder\n  },\n\n  /**\n   * Resolve the predicate function for the specified operator based on the\n   * given options and this adapter's settings.\n   *\n   * @name IgniteAdapter#getOperator\n   * @method\n   * @param {string} operator The name of the operator.\n   * @param {Object} [opts] Configuration options.\n   * @param {Object} [opts.operators] Override the default predicate functions\n   * for specified operators.\n   * @return {*} The predicate function for the specified operator.\n   */\n  getOperator (operator, opts) {\n    opts || (opts = {})\n    opts.operators || (opts.operators = {})\n    let ownOps = this.operators || {}\n    return utils.isUndefined(opts.operators[operator]) ? ownOps[operator] : opts.operators[operator]\n  },\n\n  getTable (mapper) {\n    return mapper.table || snakeCase(mapper.name)\n  },\n\n  selectTable (mapper, opts) {\n    opts || (opts = {})\n    const query = utils.isUndefined(opts.query) ? this.knex : opts.query\n    const table = this.getTable(mapper)\n    return getFields(mapper, query).from(table)\n  }\n})\n\n/**\n * Details of the current version of the `js-data-ignite` module.\n *\n * @example\n * import { version } from 'js-data-ignite';\n * console.log(version.full);\n *\n * @name module:js-data-ignite.version\n * @type {object}\n * @property {string} version.full The full semver value.\n * @property {number} version.major The major version number.\n * @property {number} version.minor The minor version number.\n * @property {number} version.patch The patch version number.\n * @property {(string|boolean)} version.alpha The alpha version value,\n * otherwise `false` if the current version is not alpha.\n * @property {(string|boolean)} version.beta The beta version value,\n * otherwise `false` if the current version is not beta.\n */\nexport const version = '<%= version %>'\n"],"names":["IgniteClient","require","IgniteClientConfiguration","SqlFieldsQuery","DEFAULTS","equal","query","field","value","isOr","getWhereType","notEqual","MILES_REGEXP","KILOMETERS_REGEXP","OPERATORS","Error","knexInstance","raw","table","filterField","filterValue","where","select","radius","unitsPerDegree","test","match","split","map","c","trim","latitudeColumn","longitudeColumn","center","latitude","longitude","whereBetween","Math","cos","PI","calculateDistance","distanceColumn","knex","Object","freeze","IgniteAdapter","opts","classCallCheck","knexOpts","igniteOpts","fillIn","defineProperties","undefined","call","operators","igniteClient","listener","debug","setDebug","igniteClientConfiguration","endpoints","setUserName","username","setPassword","password","setConnectionOptions","useTLS","connectionOptions","manualConnect","connect","getTable","mapper","snakeCase","name","getCacheName","toUpperCase","getFields","sqlBuilder","fields","schema","properties","hasOwnProperty","translateToKnex","values","length","result","i","type","JSON","parse","replace","extend","utils","Adapter","isUndefined","transaction","sqlText","filterQuery","count","toString","countQuery","cache","getCache","getAll","props","idAttribute","stringify","insert","createQuery","_find","singleProps","element","Array","isArray","_findAll","id","record","del","destroyQuery","records","destroyAllQuery","compositePk","from","findQuery","selectTable","findAllQuery","isString","sum","sumQuery","ids","push","update","updateQuery","updateAllQuery","_query","tasks","_update","Promise","all","then","results","pkValues","entries","index","toISOString","forOwn","criteria","isObject","operator","substr","predicateFn","getOperator","forEach","_where","self","prev","parser","applyWhereFromArray","applyWhereFromObject","orWhere","andWhere","plainCopy","orderBy","sort","skip","offset","config","keyword","reserved","indexOf","keys","limit","ownOps","version"],"mappings":"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"}