{"version":3,"file":"js-data-ignite.js","sources":["../src/index.js"],"sourcesContent":["import knex from 'knex'\nimport {utils} from 'js-data'\n\nimport {\n  Adapter,\n  reserved\n} from 'js-data-adapter'\nimport toString from 'lodash.tostring'\nimport snakeCase from 'lodash.snakecase'\n\nconst IgniteClient = require('apache-ignite-client')\n\nconst IgniteClientConfiguration = IgniteClient.IgniteClientConfiguration\n\nconst SqlFieldsQuery = IgniteClient.SqlFieldsQuery\n\nconst CacheConfiguration = IgniteClient.CacheConfiguration\n\nconst DEFAULTS = {}\n\nconst equal = function (query, field, value, isOr) {\n  if (value === null) {\n    return query[isOr ? 'orWhereNull' : 'whereNull'](field)\n  }\n  return query[getWhereType(isOr)](field, value)\n}\n\nconst notEqual = function (query, field, value, isOr) {\n  if (value === null) {\n    return query[isOr ? 'orWhereNotNull' : 'whereNotNull'](field)\n  }\n  return query[getWhereType(isOr)](field, '!=', value)\n}\n\nconst getWhereType = function (isOr) {\n  return isOr ? 'orWhere' : 'where'\n}\n\nconst MILES_REGEXP = /(\\d+(\\.\\d+)?)\\s*(m|M)iles$/\nconst KILOMETERS_REGEXP = /(\\d+(\\.\\d+)?)\\s*(k|K)$/\n\n/**\n * Default predicate functions for the filtering operators.\n *\n * @name module:js-data-sql.OPERATORS\n * @property {Function} == Equality operator.\n * @property {Function} != Inequality operator.\n * @property {Function} > \"Greater than\" operator.\n * @property {Function} >= \"Greater than or equal to\" operator.\n * @property {Function} < \"Less than\" operator.\n * @property {Function} <= \"Less than or equal to\" operator.\n * @property {Function} isectEmpty Operator to test that the intersection\n * between two arrays is empty. Not supported.\n * @property {Function} isectNotEmpty Operator to test that the intersection\n * between two arrays is NOT empty. Not supported.\n * @property {Function} in Operator to test whether a value is found in the\n * provided array.\n * @property {Function} notIn Operator to test whether a value is NOT found in\n * the provided array.\n * @property {Function} contains Operator to test whether an array contains the\n * provided value. Not supported.\n * @property {Function} notContains Operator to test whether an array does NOT\n * contain the provided value. Not supported.\n */\nexport const OPERATORS = {\n  '=': equal,\n  '==': equal,\n  '===': equal,\n  '!=': notEqual,\n  '!==': notEqual,\n  '>': function (query, field, value, isOr) {\n    return query[getWhereType(isOr)](field, '>', value)\n  },\n  '>=': function (query, field, value, isOr) {\n    return query[getWhereType(isOr)](field, '>=', value)\n  },\n  '<': function (query, field, value, isOr) {\n    return query[getWhereType(isOr)](field, '<', value)\n  },\n  '<=': function (query, field, value, isOr) {\n    return query[getWhereType(isOr)](field, '<=', value)\n  },\n  'isectEmpty': function (query, field, value, isOr) {\n    throw new Error('isectEmpty not supported!')\n  },\n  'isectNotEmpty': function (query, field, value, isOr) {\n    throw new Error('isectNotEmpty not supported!')\n  },\n  'in': function (query, field, value, isOr) {\n    return query[getWhereType(isOr)](field, 'in', value)\n  },\n  'notIn': function (query, field, value, isOr) {\n    return query[isOr ? 'orNotIn' : 'notIn'](field, value)\n  },\n  'contains': function (query, field, value, isOr) {\n    throw new Error('contains not supported!')\n  },\n  'notContains': function (query, field, value, isOr) {\n    throw new Error('notContains not supported!')\n  },\n  'like': function (query, field, value, isOr) {\n    return query[getWhereType(isOr)](field, 'like', value)\n  },\n  'near': function (query, field, value, isOr) {\n    let radius\n    let unitsPerDegree\n    if (typeof value.radius === 'number' || MILES_REGEXP.test(value.radius)) {\n      radius = typeof value.radius === 'number' ? value.radius : value.radius.match(MILES_REGEXP)[1]\n      unitsPerDegree = 69.0 // miles per degree\n    } else if (KILOMETERS_REGEXP.test(value.radius)) {\n      radius = value.radius.match(KILOMETERS_REGEXP)[1]\n      unitsPerDegree = 111.045 // kilometers per degree;\n    } else {\n      throw new Error('Unknown radius distance units')\n    }\n\n    let [latitudeColumn, longitudeColumn] = field.split(',').map((c) => c.trim())\n    let [latitude, longitude] = value.center\n\n    // Uses indexes on `latitudeColumn` / `longitudeColumn` if available\n    query = query\n      .whereBetween(latitudeColumn, [\n        latitude - (radius / unitsPerDegree),\n        latitude + (radius / unitsPerDegree)\n      ])\n      .whereBetween(longitudeColumn, [\n        longitude - (radius / (unitsPerDegree * Math.cos(latitude * (Math.PI / 180)))),\n        longitude + (radius / (unitsPerDegree * Math.cos(latitude * (Math.PI / 180))))\n      ])\n\n    if (value.calculateDistance) {\n      let distanceColumn = (typeof value.calculateDistance === 'string') ? value.calculateDistance : 'distance'\n      query = query.select(knex.raw(`\n        ${unitsPerDegree} * DEGREES(ACOS(\n          COS(RADIANS(?)) * COS(RADIANS(${latitudeColumn})) *\n          COS(RADIANS(${longitudeColumn}) - RADIANS(?)) +\n          SIN(RADIANS(?)) * SIN(RADIANS(${latitudeColumn}))\n        )) AS ${distanceColumn}`, [latitude, longitude, latitude]))\n    }\n    return query\n  }\n}\n\nObject.freeze(OPERATORS)\n\n/**\n * IgniteAdapter class.\n *\n * @example\n * // Use Container instead of DataStore on the server\n * import { Container } from 'js-data';\n * import IgniteAdapter from 'js-data-sql';\n *\n * // Create a store to hold your Mappers\n * const store = new Container();\n *\n * // Create an instance of IgniteAdapter with default settings\n * const adapter = new IgniteAdapter();\n *\n * // Mappers in \"store\" will use the Sql adapter by default\n * store.registerAdapter('sql', adapter, { default: true });\n *\n * // Create a Mapper that maps to a \"user\" table\n * store.defineMapper('user');\n *\n * @class IgniteAdapter\n * @extends Adapter\n * @param {Object} [opts] Configuration options.\n * @param {boolean} [opts.debug=false] See {@link Adapter#debug}.\n * @param {Object} [opts.knexOpts] See {@link IgniteAdapter#knexOpts}.\n * @param {Object} [opts.operators] See {@link IgniteAdapter#operators}.\n * @param {boolean} [opts.raw=false] See {@link Adapter#raw}.\n */\nexport function IgniteAdapter (opts) {\n  utils.classCallCheck(this, IgniteAdapter)\n  opts || (opts = {})\n  opts.knexOpts || (opts.knexOpts = {})\n  opts.igniteOpts || (opts.igniteOpts = {})\n  utils.fillIn(opts, DEFAULTS)\n\n  Object.defineProperties(this, {\n    knex: {\n      writable: true,\n      value: undefined\n    },\n\n    igniteClient: {\n      writable: true,\n      value: undefined\n    }\n  })\n\n  Adapter.call(this, opts)\n\n  /**\n   * Override the default predicate functions for specified operators.\n   *\n   * @name IgniteAdapter#operators\n   * @type {Object}\n   * @default {}\n   */\n  this.knex || (this.knex = knex(this.knexOpts))\n\n  /**\n   * Override the default predicate functions for specified operators.\n   *\n   * @name IgniteAdapter#operators\n   * @type {Object}\n   * @default {}\n   */\n  this.operators || (this.operators = {})\n  utils.fillIn(this.operators, OPERATORS)\n\n  // this.igniteOpts || (this.igniteOpts = {})\n\n  this.igniteClient || (this.igniteClient = new IgniteClient(opts.igniteOpts.listener))\n  // this.igniteClient  = new IgniteClient();\n\n  const igniteClientConfiguration = new IgniteClientConfiguration(...opts.igniteOpts.endpoints)\n    .setUserName(opts.igniteOpts.username)\n    .setPassword(opts.igniteOpts.password)\n    .setConnectionOptions(opts.igniteOpts.useTLS, opts.igniteOpts.connectionOptions)\n\n  this.igniteClientConfiguration || (this.igniteClientConfiguration = igniteClientConfiguration)\n\n  this.igniteClient.connect(this.igniteClientConfiguration)\n  // await igniteClient.connect(igniteClientConfiguration);\n}\n\n// async function connect () {\n//   return this.igniteClient.connect(this.igniteClientConfiguration)\n// }\n\nfunction getTable (mapper) {\n  return mapper.table || snakeCase(mapper.name)\n}\n\nfunction getCacheName (mapper) {\n  return 'SQL_PUBLIC_' + getTable(mapper).toUpperCase()\n}\n\nfunction getFields (mapper, sqlBuilder) {\n  const fields = mapper.schema.properties\n  const table = getTable(mapper)\n\n  for (const field in fields) {\n    if (fields.hasOwnProperty(field)) {\n      sqlBuilder = sqlBuilder.select(`${table}.${field}`)\n    }\n  }\n\n  return sqlBuilder\n}\n\nfunction translateToKnex (mapper, values) {\n  if (!values.length) {\n    return null\n  }\n\n  const fields = mapper.schema.properties\n\n  const result = {}\n  let i = 0\n\n  console.log(values)\n\n  for (const field in fields) {\n    if (fields.hasOwnProperty(field)) {\n      result[field] = fields[field].type === 'array' ? JSON.parse(values[i++].replace(/\\\\/g, '')) : values[i++]\n    }\n  }\n\n  return result\n}\n\n/**\n * Alternative to ES2015 class syntax for extending `IgniteAdapter`.\n *\n * @example <caption>Using the ES2015 class syntax.</caption>\n * class MyIgniteAdapter extends IgniteAdapter {...};\n * const adapter = new MyIgniteAdapter();\n *\n * @example <caption>Using {@link IgniteAdapter.extend}.</caption>\n * const instanceProps = {...};\n * const classProps = {...};\n *\n * const MyIgniteAdapter = IgniteAdapter.extend(instanceProps, classProps);\n * const adapter = new MyIgniteAdapter();\n *\n * @method IgniteAdapter.extend\n * @static\n * @param {Object} [instanceProps] Properties that will be added to the\n * prototype of the subclass.\n * @param {Object} [classProps] Properties that will be added as static\n * properties to the subclass itself.\n * @return {Constructor} Subclass of `IgniteAdapter`.\n */\nIgniteAdapter.extend = utils.extend\n\nAdapter.extend({\n  constructor: IgniteAdapter,\n\n  async connect () {\n    return this.igniteClient.connect(this.igniteClientConfiguration)\n  },\n\n  async _count (mapper, query, opts) {\n    opts || (opts = {})\n    query || (query = {})\n\n    const sqlBuilder = utils.isUndefined(opts.transaction) ? this.knex : opts.transaction\n    const sqlText = this.filterQuery(sqlBuilder(getTable(mapper)), query, opts)\n      .count('* as count')\n      .toString()\n\n    console.log(sqlText)\n\n    const countQuery = new SqlFieldsQuery(sqlText)\n    const cache = await this.igniteClient.getOrCreateCache(getCacheName(mapper), new CacheConfiguration()\n        .setSqlSchema('PUBLIC'))\n    const result = await (await cache.query(countQuery)).getAll()\n\n    return [result[0][0], {}]\n  },\n\n  async _create (mapper, props, opts) {\n    const idAttribute = mapper.idAttribute\n    props || (props = {})\n    opts || (opts = {})\n\n    for (const field in props) {\n      if (props.hasOwnProperty(field)) {\n        const element = props[field]\n        if (Array.isArray(element)) {\n          props[field] = JSON.stringify(element)\n        }\n      }\n    }\n\n    const sqlBuilder = utils.isUndefined(opts.transaction) ? this.knex : opts.transaction\n    const sqlText = sqlBuilder(getTable(mapper))\n      .insert(props)\n      .toString()\n\n    const createQuery = new SqlFieldsQuery(sqlText)\n    const cache = await this.igniteClient.getOrCreateCache(getCacheName(mapper), new CacheConfiguration()\n      .setSqlSchema('PUBLIC'))\n    await cache.query(createQuery)\n\n    return this._find(mapper, props[idAttribute], opts)\n  },\n\n  async _createMany (mapper, props, opts) {\n    props || (props = {})\n    opts || (opts = {})\n\n    props = props.map((singleProps) => {\n      for (const field in singleProps) {\n        if (singleProps.hasOwnProperty(field)) {\n          const element = singleProps[field]\n          if (Array.isArray(element)) {\n            singleProps[field] = JSON.stringify(element)\n          }\n        }\n      }\n      return singleProps\n    })\n\n    const sqlBuilder = utils.isUndefined(opts.transaction) ? this.knex : opts.transaction\n    const sqlText = sqlBuilder(getTable(mapper))\n      .insert(props)\n      .toString()\n\n    console.log(sqlText)\n\n    const createQuery = new SqlFieldsQuery(sqlText)\n    const cache = await this.igniteClient.getOrCreateCache(getCacheName(mapper), new CacheConfiguration()\n      .setSqlSchema('PUBLIC'))\n    await cache.query(createQuery)\n\n    const query = {\n      where: {\n        [mapper.idAttribute]: {\n          'in': props.map((singleProps) => singleProps[mapper.idAttribute])\n        }\n      }\n    }\n\n    return this._findAll(mapper, query, opts)\n  },\n\n  async _destroy (mapper, id, opts) {\n    opts || (opts = {})\n\n    const record = await this._find(mapper, id, opts)\n    const sqlBuilder = utils.isUndefined(opts.transaction) ? this.knex : opts.transaction\n    const sqlText = sqlBuilder(getTable(mapper))\n      .where(mapper.idAttribute, toString(id))\n      .del()\n      .toString()\n\n    const destroyQuery = new SqlFieldsQuery(sqlText)\n    const cache = await this.igniteClient.getOrCreateCache(getCacheName(mapper), new CacheConfiguration()\n        .setSqlSchema('PUBLIC'))\n    await cache.query(destroyQuery)\n\n    return record\n  },\n\n  async _destroyAll (mapper, query, opts) {\n    query || (query = {})\n    opts || (opts = {})\n\n    const records = await this._findAll(mapper, query, opts)\n    const sqlBuilder = utils.isUndefined(opts.transaction) ? this.knex : opts.transaction\n    const sqlText = this.filterQuery(sqlBuilder(getTable(mapper)), query, opts)\n      .del()\n      .toString()\n\n    console.log(sqlText)\n\n    const destroyAllQuery = new SqlFieldsQuery(sqlText)\n    const cache = await this.igniteClient.getOrCreateCache(getCacheName(mapper), new CacheConfiguration()\n      .setSqlSchema('PUBLIC'))\n    await cache.query(destroyAllQuery)\n\n    return records\n  },\n\n  async _find (mapper, id, opts) {\n    opts || (opts = {})\n\n    const sqlBuilder = utils.isUndefined(opts.transaction) ? this.knex : opts.transaction\n    const table = getTable(mapper)\n    const sqlText = getFields(mapper, sqlBuilder)\n      .from(table)\n      .where(`${table}.${mapper.idAttribute}`, toString(id))\n      .toString()\n\n    console.log(sqlText)\n\n    const findQuery = new SqlFieldsQuery(sqlText)\n    const cache = await this.igniteClient.getOrCreateCache(getCacheName(mapper), new CacheConfiguration()\n      .setSqlSchema('PUBLIC'))\n    const result = await (await cache.query(findQuery)).getAll()\n\n    return [ translateToKnex(mapper, result[0]), {} ]\n  },\n\n  async _findAll (mapper, query, opts) {\n    query || (query = {})\n    opts || (opts = {})\n\n    const sqlText = this.filterQuery(this.selectTable(mapper, opts), query, opts).toString()\n\n    console.log(sqlText)\n\n    const findAllQuery = new SqlFieldsQuery(sqlText)\n    const cache = await this.igniteClient.getOrCreateCache(getCacheName(mapper), new CacheConfiguration()\n      .setSqlSchema('PUBLIC'))\n    const records = await (await cache.query(findAllQuery)).getAll()\n\n    const result = records.map((record) => {\n      return translateToKnex(mapper, record)\n    })\n    return [ result, {} ]\n  },\n\n  async _sum (mapper, field, query, opts) {\n    if (!utils.isString(field)) {\n      throw new Error('field must be a string!')\n    }\n    opts || (opts = {})\n    query || (query = {})\n\n    const sqlBuilder = utils.isUndefined(opts.transaction) ? this.knex : opts.transaction\n    const sqlText = this.filterQuery(sqlBuilder(getTable(mapper)), query, opts)\n      .sum(`${field} as sum`)\n      .toString()\n\n    console.log(sqlText)\n\n    const sumQuery = new SqlFieldsQuery(sqlText)\n    const cache = await this.igniteClient.getOrCreateCache(getCacheName(mapper), new CacheConfiguration()\n      .setSqlSchema('PUBLIC'))\n    const result = await (await cache.query(sumQuery)).getAll()\n\n    return [result[0][0], {}]\n  },\n\n  async _update (mapper, id, props, opts) {\n    props || (props = {})\n    opts || (opts = {})\n\n    for (const field in props) {\n      if (props.hasOwnProperty(field)) {\n        const element = props[field]\n        if (Array.isArray(element)) {\n          props[field] = JSON.stringify(element)\n        }\n      }\n    }\n\n    delete props[mapper.idAttribute]\n    const sqlBuilder = utils.isUndefined(opts.transaction) ? this.knex : opts.transaction\n    const sqlText = sqlBuilder(getTable(mapper))\n      .where(mapper.idAttribute, toString(id))\n      .update(props)\n      .toString()\n\n    console.log(sqlText)\n\n    const updateQuery = new SqlFieldsQuery(sqlText)\n    const cache = await this.igniteClient.getOrCreateCache(getCacheName(mapper), new CacheConfiguration()\n      .setSqlSchema('PUBLIC'))\n    await cache.query(updateQuery)\n\n    return this._find(mapper, id, opts)\n  },\n\n  async _updateAll (mapper, props, query, opts) {\n    const idAttribute = mapper.idAttribute\n    props || (props = {})\n    query || (query = {})\n    opts || (opts = {})\n\n    props = props.map((singleProps) => {\n      delete singleProps[idAttribute]\n      return singleProps\n    })\n\n    const result = await this._findAll(mapper, query, opts)\n\n    const records = result[0]\n    const ids = records.map((record) => record[idAttribute])\n    const sqlBuilder = utils.isUndefined(opts.transaction) ? this.knex : opts.transaction\n\n    const sqlText = this.filterQuery(sqlBuilder(getTable(mapper)), query, opts).update(props).toString()\n\n    const updateAllQuery = new SqlFieldsQuery(sqlText)\n    const cache = await this.igniteClient.getOrCreateCache(getCacheName(mapper), new CacheConfiguration()\n      .setSqlSchema('PUBLIC'))\n    await cache.query(updateAllQuery)\n    // const updated = await (await cache.query(updateAllQuery)).getAll()\n\n    const _query = { where: {} }\n    _query.where[idAttribute] = { 'in': ids }\n    return this._findAll(mapper, _query, opts)\n  },\n\n  async _updateMany (mapper, records, opts) {\n    const idAttribute = mapper.idAttribute\n    records || (records = [])\n    opts || (opts = {})\n\n    const tasks = records.map((record) => this._update(mapper, record[idAttribute], record, opts))\n\n    return Promise.all(tasks).then((results) => [results.map((result) => result[0]), {}])\n  },\n\n  applyWhereFromObject (sqlBuilder, where, opts) {\n    utils.forOwn(where, (criteria, field) => {\n      if (!utils.isObject(criteria)) {\n        criteria = { '==': criteria }\n      }\n      // Apply filter for each operator\n      utils.forOwn(criteria, (value, operator) => {\n        let isOr = false\n        if (operator && operator[0] === '|') {\n          operator = operator.substr(1)\n          isOr = true\n        }\n        let predicateFn = this.getOperator(operator, opts)\n        if (predicateFn) {\n          sqlBuilder = predicateFn(sqlBuilder, field, value, isOr)\n        } else {\n          throw new Error(`Operator ${operator} not supported!`)\n        }\n      })\n    })\n    return sqlBuilder\n  },\n\n  applyWhereFromArray (sqlBuilder, where, opts) {\n    where.forEach((_where, i) => {\n      if (_where === 'and' || _where === 'or') {\n        return\n      }\n      const self = this\n      const prev = where[i - 1]\n      const parser = utils.isArray(_where) ? this.applyWhereFromArray : this.applyWhereFromObject\n      if (prev) {\n        if (prev === 'or') {\n          sqlBuilder = sqlBuilder.orWhere(function () {\n            parser.call(self, this, _where, opts)\n          })\n        } else {\n          sqlBuilder = sqlBuilder.andWhere(function () {\n            parser.call(self, this, _where, opts)\n          })\n        }\n      } else {\n        sqlBuilder = sqlBuilder.where(function () {\n          parser.call(self, this, _where, opts)\n        })\n      }\n    })\n    return sqlBuilder\n  },\n\n  filterQuery (sqlBuilder, query, opts) {\n    query = utils.plainCopy(query || {})\n    opts || (opts = {})\n    opts.operators || (opts.operators = {})\n    query.where || (query.where = {})\n    query.orderBy || (query.orderBy = query.sort)\n    query.orderBy || (query.orderBy = [])\n    query.skip || (query.skip = query.offset)\n\n    // Transform non-keyword properties to \"where\" clause configuration\n    utils.forOwn(query, (config, keyword) => {\n      if (reserved.indexOf(keyword) === -1) {\n        if (utils.isObject(config)) {\n          query.where[keyword] = config\n        } else {\n          query.where[keyword] = {\n            '==': config\n          }\n        }\n        delete query[keyword]\n      }\n    })\n\n    // Filter\n    if (utils.isObject(query.where) && Object.keys(query.where).length !== 0) {\n      // Apply filter for each field\n      sqlBuilder = this.applyWhereFromObject(sqlBuilder, query.where, opts)\n    } else if (utils.isArray(query.where)) {\n      sqlBuilder = this.applyWhereFromArray(sqlBuilder, query.where, opts)\n    }\n\n    // Sort\n    if (query.orderBy) {\n      if (utils.isString(query.orderBy)) {\n        query.orderBy = [\n          [query.orderBy, 'asc']\n        ]\n      }\n      for (var i = 0; i < query.orderBy.length; i++) {\n        if (utils.isString(query.orderBy[i])) {\n          query.orderBy[i] = [query.orderBy[i], 'asc']\n        }\n        sqlBuilder = sqlBuilder.orderBy(query.orderBy[i][0], (query.orderBy[i][1] || '').toUpperCase() === 'DESC' ? 'desc' : 'asc')\n      }\n    }\n\n    // Offset\n    if (query.skip) {\n      sqlBuilder = sqlBuilder.offset(+query.skip)\n    }\n\n    // Limit\n    if (query.limit) {\n      sqlBuilder = sqlBuilder.limit(+query.limit)\n    }\n\n    return sqlBuilder\n    // if (!isEmpty(params.where)) {\n    //   forOwn(params.where, (criteria, field) => {\n    //     if (contains(field, '.')) {\n    //       if (contains(field, ',')) {\n    //         let splitFields = field.split(',').map(c => c.trim())\n    //         field = splitFields.map(splitField => processRelationField.call(this, resourceConfig, query, splitField, criteria, options, joinedTables)).join(',')\n    //       } else {\n    //         field = processRelationField.call(this, resourceConfig, query, field, criteria, options, joinedTables)\n    //       }\n    //     }\n    //   })\n    // }\n  },\n\n  /**\n   * Resolve the predicate function for the specified operator based on the\n   * given options and this adapter's settings.\n   *\n   * @name IgniteAdapter#getOperator\n   * @method\n   * @param {string} operator The name of the operator.\n   * @param {Object} [opts] Configuration options.\n   * @param {Object} [opts.operators] Override the default predicate functions\n   * for specified operators.\n   * @return {*} The predicate function for the specified operator.\n   */\n  getOperator (operator, opts) {\n    opts || (opts = {})\n    opts.operators || (opts.operators = {})\n    let ownOps = this.operators || {}\n    return utils.isUndefined(opts.operators[operator]) ? ownOps[operator] : opts.operators[operator]\n  },\n\n  getTable (mapper) {\n    return mapper.table || snakeCase(mapper.name)\n  },\n\n  selectTable (mapper, opts) {\n    opts || (opts = {})\n    const query = utils.isUndefined(opts.query) ? this.knex : opts.query\n    const table = this.getTable(mapper)\n    return getFields(mapper, query).from(table)\n    // return query.select(getFields(mapper)).from(table)\n  }\n})\n\n/**\n * Details of the current version of the `js-data-sql` module.\n *\n * @example\n * import { version } from 'js-data-sql';\n * console.log(version.full);\n *\n * @name module:js-data-sql.version\n * @type {object}\n * @property {string} version.full The full semver value.\n * @property {number} version.major The major version number.\n * @property {number} version.minor The minor version number.\n * @property {number} version.patch The patch version number.\n * @property {(string|boolean)} version.alpha The alpha version value,\n * otherwise `false` if the current version is not alpha.\n * @property {(string|boolean)} version.beta The beta version value,\n * otherwise `false` if the current version is not beta.\n */\nexport const version = '<%= version %>'\n\n/**\n * {@link IgniteAdapter} class.\n *\n * @example <caption>CommonJS</caption>\n * const IgniteAdapter = require('js-data-sql').IgniteAdapter;\n * const adapter = new IgniteAdapter();\n *\n * @example <caption>ES2015 Modules</caption>\n * import { IgniteAdapter } from 'js-data-sql';\n * const adapter = new IgniteAdapter();\n *\n * @name module:js-data-sql.IgniteAdapter\n * @see IgniteAdapter\n * @type {Constructor}\n */\n\n/**\n * Registered as `js-data-sql` in NPM.\n *\n * @example <caption>Install from NPM (for use with MySQL)</caption>\n * npm i --save js-data-sql js-data mysql\n *\n * @example <caption>Load via CommonJS</caption>\n * const IgniteAdapter = require('js-data-sql').IgniteAdapter;\n * const adapter = new IgniteAdapter();\n *\n * @example <caption>Load via ES2015 Modules</caption>\n * import { IgniteAdapter } from 'js-data-sql';\n * const adapter = new IgniteAdapter();\n *\n * @module js-data-sql\n */\n\n/**\n * Create a subclass of this IgniteAdapter:\n * @example <caption>IgniteAdapter.extend</caption>\n * // Normally you would do: import { IgniteAdapter } from 'js-data-sql';\n * const JSDataSql = require('js-data-sql');\n * const { IgniteAdapter } = JSDataSql;\n * console.log('Using JSDataSql v' + JSDataSql.version.full);\n *\n * // Extend the class using ES2015 class syntax.\n * class CustomIgniteAdapterClass extends IgniteAdapter {\n *   foo () { return 'bar'; }\n *   static beep () { return 'boop'; }\n * }\n * const customIgniteAdapter = new CustomIgniteAdapterClass();\n * console.log(customIgniteAdapter.foo());\n * console.log(CustomIgniteAdapterClass.beep());\n *\n * // Extend the class using alternate method.\n * const OtherIgniteAdapterClass = IgniteAdapter.extend({\n *   foo () { return 'bar'; }\n * }, {\n *   beep () { return 'boop'; }\n * });\n * const otherIgniteAdapter = new OtherIgniteAdapterClass();\n * console.log(otherIgniteAdapter.foo());\n * console.log(OtherIgniteAdapterClass.beep());\n *\n * // Extend the class, providing a custom constructor.\n * function AnotherIgniteAdapterClass () {\n *   IgniteAdapter.call(this);\n *   this.created_at = new Date().getTime();\n * }\n * IgniteAdapter.extend({\n *   constructor: AnotherIgniteAdapterClass,\n *   foo () { return 'bar'; }\n * }, {\n *   beep () { return 'boop'; }\n * });\n * const anotherIgniteAdapter = new AnotherIgniteAdapterClass();\n * console.log(anotherIgniteAdapter.created_at);\n * console.log(anotherIgniteAdapter.foo());\n * console.log(AnotherIgniteAdapterClass.beep());\n *\n * @method IgniteAdapter.extend\n * @param {object} [props={}] Properties to add to the prototype of the\n * subclass.\n * @param {object} [props.constructor] Provide a custom constructor function\n * to be used as the subclass itself.\n * @param {object} [classProps={}] Static properties to add to the subclass.\n * @returns {Constructor} Subclass of this IgniteAdapter class.\n * @since 3.0.0\n */\n"],"names":["IgniteClient","require","IgniteClientConfiguration","SqlFieldsQuery","CacheConfiguration","DEFAULTS","equal","query","field","value","isOr","getWhereType","notEqual","MILES_REGEXP","KILOMETERS_REGEXP","OPERATORS","Error","radius","unitsPerDegree","test","match","split","map","c","trim","latitudeColumn","longitudeColumn","center","latitude","longitude","whereBetween","Math","cos","PI","calculateDistance","distanceColumn","select","knex","raw","Object","freeze","IgniteAdapter","opts","classCallCheck","knexOpts","igniteOpts","fillIn","defineProperties","undefined","call","operators","igniteClient","listener","igniteClientConfiguration","endpoints","setUserName","username","setPassword","password","setConnectionOptions","useTLS","connectionOptions","connect","getTable","mapper","table","snakeCase","name","getCacheName","toUpperCase","getFields","sqlBuilder","fields","schema","properties","hasOwnProperty","translateToKnex","values","length","result","i","log","type","JSON","parse","replace","extend","utils","Adapter","isUndefined","transaction","sqlText","filterQuery","count","toString","countQuery","cache","getOrCreateCache","setSqlSchema","getAll","props","idAttribute","element","Array","isArray","stringify","insert","createQuery","_find","singleProps","_findAll","id","record","where","del","destroyQuery","records","destroyAllQuery","from","findQuery","selectTable","findAllQuery","isString","sum","sumQuery","update","updateQuery","ids","updateAllQuery","_query","tasks","_update","Promise","all","then","results","forOwn","criteria","isObject","operator","substr","predicateFn","getOperator","forEach","_where","self","prev","parser","applyWhereFromArray","applyWhereFromObject","orWhere","andWhere","plainCopy","orderBy","sort","skip","offset","config","keyword","reserved","indexOf","keys","limit","ownOps","version"],"mappings":"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"}